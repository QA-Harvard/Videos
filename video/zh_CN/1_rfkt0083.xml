<?xml version="1.0" encoding="UTF-8" standalone="no"?><asset:video xmlns:asset="http://cl.hbsp.org/asset/content" xmlns:alf="http://www.alfresco.org" xmlns:chiba="http://chiba.sourceforge.net/xforms" xmlns:ev="http://www.w3.org/2001/xml-events" xmlns:ns1="http://www.w3.org/2001/XMLSchema" xmlns:xf="http://www.w3.org/2002/xforms" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><asset:name>1_rfkt0083</asset:name><asset:learningInstruction xsi:nil="false">&lt;p&gt;video&lt;/p&gt;</asset:learningInstruction><asset:transcript>&lt;P&gt;﻿	企业家面临的其中一个难题是，决定在流程和基础设施 以及建立产品和学习这两方面 需要投入多少时间和精力。我们使用丰田生产体系中的 一个技巧，称为“五问法”。&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	这一理念在于，当我们遇到问题时，例如服务器崩溃或者产品有问题，我们要深入探寻导致失败的根本原因，然后解决这一根本原因。在每个看似技术问题的背后，其实都能够发现人为问题。&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	我来举个例子。在我就职的上一家公司，如果服务器崩溃，我们会问这样的问题：服务器为什么崩溃？可能是因为有新的 API 推送到该服务器。但为什么会出现这一问题呢？因为我们刚刚发布了一项新功能，以错误的方式使用了该 API。为什么会出现这一问题？因为我们新聘请的工程师 不了解如何正确使用该 API。为什么会出现这一问题？因为该工程师从未受过培训。为什么会出现这一问题？因为他们的经理不相信培训。&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	所以，看似是服务器崩溃的技术问题，实质上揭露了这名工程师的经理的 管理问题。五问法的技巧是在五个层次结构中的 每一级按比例进行投入。所以解决方案是修复服务器，改善 API，教导该工程师正确的使用方法，并与该工程师的经理 进行谈话。&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	现在，如果我是这名经理，当我进行此类型的谈话时，通常会这样说：“嗯，我当然相信培训。我认为培训非常重要。如果您能找人完成我计划在 未来八周完成的所有工作，那么我很乐意花时间为公司制定 最先进的培训计划。”在刚起步的公司，管理者基本上 会说：“我没办法进行该 培训计划，不要打扰我。”那么我们该如何摆脱这种 要么全有要么全无的情况？ 是投入八周时间进行管理培训，还是听任问题自然发展？&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	五问法为我们提供了一个方法，即“每次当问题发生时，进行一小部分投入。”让我们先进行八周培训计划的第一个小时。然后，如果遇到因缺乏培训造成的 其他问题，我们将进行第二个小时、第三个小时和第四个小时的培训。&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	通过这种方法，五问法起到自动速度调节器的作用。当我们进展太快时，当我们懒散马虎时，当我们犯错时，该方法促使我们 自动按比例在预防方面进行投入。随着这些预防投入取得成功，团队自然可以再次加速，于是我们就可以找到最佳的工作节奏。&lt;/P&gt;&lt;P&gt;	&lt;/P&gt;&lt;P&gt;	这就是该方法的工作原理。每次当你遇到意想不到的问题，或是必须解决的状况，请至少问五次为什么。找到每个看似技术故障背后的 人为问题，在这五层中的每一层按比例进行投入。这一技巧确实是行之有效的方法，有助于构建一种适应性文化，在需要的时候自动投入时间改善流程。&lt;/P&gt;</asset:transcript><asset:biography xsi:nil="false">&lt;P&gt;&lt;/P&gt;&lt;P&gt;&lt;/P&gt;&lt;P&gt;Eric Ries 是哈佛商学院的入驻企业家，著有《纽约时报》畅销书《精益创业》，并维护当红的创业博客 Startup Lessons Learned。 &lt;/P&gt;&lt;P&gt;&lt;/P&gt;&lt;P&gt;Eric 曾参与创办在线社交娱乐社区 IMVU，并担任其首席技术官。2007 年，《商业周刊》提名他为“技术领域最佳青年企业家”。2009 年，他荣获了 TechFellow 工程领导奖。他现任多家科技初创企业的顾问，曾为新老公司和风险投资公司提供咨询。当前，他是设计咨询公司 IDEO 的研究员。&lt;/P&gt;&lt;P&gt;&lt;/P&gt;&lt;P&gt;Eric 与人合著了多本书籍，包括与 Joel Fan 和 Calin Tenitchi 共著的《Black Art of Java Game Programming》。他拥有耶鲁大学的计算机科学学士学位。&lt;/P&gt;&lt;P&gt;&lt;/P&gt;</asset:biography></asset:video>